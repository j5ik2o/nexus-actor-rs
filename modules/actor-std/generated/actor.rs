// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Pid {
    #[prost(string, tag = "1")]
    pub address: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub id: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub request_id: u32,
}
/// user messages
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PoisonPill {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeadLetterResponse {
    #[prost(message, optional, tag = "1")]
    pub target: ::core::option::Option<Pid>,
}
/// system messages
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Watch {
    #[prost(message, optional, tag = "1")]
    pub watcher: ::core::option::Option<Pid>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Unwatch {
    #[prost(message, optional, tag = "1")]
    pub watcher: ::core::option::Option<Pid>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Terminated {
    #[prost(message, optional, tag = "1")]
    pub who: ::core::option::Option<Pid>,
    #[prost(enumeration = "TerminatedReason", tag = "2")]
    pub why: i32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Stop {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Touch {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Touched {
    #[prost(message, optional, tag = "1")]
    pub who: ::core::option::Option<Pid>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum TerminatedReason {
    Stopped = 0,
    AddressTerminated = 1,
    NotFound = 2,
}
impl TerminatedReason {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Stopped => "Stopped",
            Self::AddressTerminated => "AddressTerminated",
            Self::NotFound => "NotFound",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "Stopped" => Some(Self::Stopped),
            "AddressTerminated" => Some(Self::AddressTerminated),
            "NotFound" => Some(Self::NotFound),
            _ => None,
        }
    }
}
